/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kronoze.lasertagwaitlist;

import java.time.LocalTime;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author Ryan
 */
public class EditSettings extends javax.swing.JFrame {
    
    private final LocalSettings localSettings;
    private final DBAssistant dba = LaserTagWaitlist.getDBA();
    private final Map<String, String> initSettings = new HashMap<>();
    
    /**
     * Creates new form EditSettings
     */
    public EditSettings() {
	initComponents();
	this.localSettings = LaserTagWaitlist.getLocalSettings();
	
	// Load - Network settings
	gameCapacityInput.setValue(Integer.parseInt(dba.loadSetting("game_capacity")));
	taxRateInput.setText(dba.loadSetting("tax_rate"));

	String openTimeString = dba.loadSetting("open_time");
	int openHour = Integer.parseInt(openTimeString.substring(0, 2));
	int openMinute = Integer.parseInt(openTimeString.substring(3, 5));
	String openPeriod = openTimeString.substring(6);
	System.out.println("Open: hour = \"" + openHour + "\", minute = \"" + openMinute + "\", period = \"" + openPeriod + "\"");
	
	openTimeHourInput.setValue(openHour);
	openTimeMinuteInput.setValue(openMinute);
	openTimePeriodInput.setValue(openPeriod);
	
	String closeTimeString = dba.loadSetting("close_time");
	int closeHour = Integer.parseInt(closeTimeString.substring(0, 2));
	int closeMinute = Integer.parseInt(closeTimeString.substring(3, 5));
	String closePeriod = closeTimeString.substring(6);
	System.out.println("Open: hour = \"" + closeHour + "\", minute = \"" + closeMinute + "\", period = \"" + closePeriod + "\"");

	closeTimeHourInput.setValue(closeHour);
	closeTimeMinuteInput.setValue(closeMinute);
	closeTimePeriodInput.setValue(closePeriod);
	   
	String timeSlotIncrementString = dba.loadSetting("time_slot_increment");
	timeSlotIncrementInput.setValue(Integer.parseInt(timeSlotIncrementString));
	
	
	
	// Load - Local settings
	hostInput.setText(localSettings.load("Host"));
	portInput.setText(localSettings.load("Port"));
	dbNameInput.setText(localSettings.load("DBName"));
	usernameInput.setText(localSettings.load("DBUsername"));
	passwordInput.setText(localSettings.load("DBPassword"));
	
	initSettings.put("open_time", openTimeString);
	initSettings.put("close_time", closeTimeString);
	initSettings.put("time_slot_increment", timeSlotIncrementString);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        gameCapacityInput = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        taxRateInput = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        openTimeHourInput = new javax.swing.JSpinner();
        openTimeMinuteInput = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        closeTimeHourInput = new javax.swing.JSpinner();
        closeTimeMinuteInput = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        hostInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        portInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        dbNameInput = new javax.swing.JTextField();
        usernameInput = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        passwordInput = new javax.swing.JTextField();
        openTimePeriodInput = new javax.swing.JSpinner();
        closeTimePeriodInput = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        timeSlotIncrementInput = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel1.setText("Game Capacity");

        jLabel2.setText("Tax Rate");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Open Time");

        openTimeHourInput.setModel(new javax.swing.SpinnerNumberModel(9, 1, 12, 1));

        openTimeMinuteInput.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel4.setText("Close Time");

        closeTimeHourInput.setModel(new javax.swing.SpinnerNumberModel(9, 1, 12, 1));

        closeTimeMinuteInput.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Database Settings");

        jLabel6.setText("Host");

        jLabel7.setText("Port");

        jLabel8.setText("Database Name:");

        jLabel9.setText("Username:");

        jLabel10.setText("Password:");

        openTimePeriodInput.setModel(new javax.swing.SpinnerListModel(new String[] {"AM", "PM"}));

        closeTimePeriodInput.setModel(new javax.swing.SpinnerListModel(new String[] {"AM", "PM"}));

        jLabel11.setText("Time Slot Increment");

        timeSlotIncrementInput.setModel(new javax.swing.SpinnerNumberModel(12, 0, 59, 1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Global Settings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(openTimeHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(openTimeMinuteInput, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(closeTimeHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(closeTimeMinuteInput)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(openTimePeriodInput, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                                            .addComponent(closeTimePeriodInput)))
                                    .addComponent(timeSlotIncrementInput)
                                    .addComponent(gameCapacityInput)
                                    .addComponent(taxRateInput))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                            .addComponent(usernameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dbNameInput, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(portInput, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                            .addComponent(hostInput))))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(hostInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(portInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dbNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(gameCapacityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(taxRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(openTimeMinuteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(openTimePeriodInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(openTimeHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(closeTimeHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(closeTimeMinuteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(closeTimePeriodInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(timeSlotIncrementInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
	
	// Save - Network settings
	dba.changeSetting("game_capacity", gameCapacityInput.getValue().toString());
	dba.changeSetting("tax_rate", taxRateInput.getText().trim());
	
	String openTimeHour = (Integer.parseInt(openTimeHourInput.getValue().toString()) < 10) ? "0" + openTimeHourInput.getValue().toString() : openTimeHourInput.getValue().toString();
	String openTimeMinute = (Integer.parseInt(openTimeMinuteInput.getValue().toString()) < 10) ? "0" + openTimeMinuteInput.getValue().toString() : openTimeMinuteInput.getValue().toString();
	String openTimePeriod = openTimePeriodInput.getValue().toString();
	String openTimeString = openTimeHour + ":" + openTimeMinute + " " + openTimePeriod;
	
	String closeTimeHour = (Integer.parseInt(closeTimeHourInput.getValue().toString()) < 10) ? "0" + closeTimeHourInput.getValue().toString() : closeTimeHourInput.getValue().toString();
	String closeTimeMinute = (Integer.parseInt(closeTimeMinuteInput.getValue().toString()) < 10) ? "0" + closeTimeMinuteInput.getValue().toString() : closeTimeMinuteInput.getValue().toString();
	String closeTimePeriod = closeTimePeriodInput.getValue().toString();
	String closeTimeString = closeTimeHour + ":" + closeTimeMinute + " " + closeTimePeriod;
	
	LocalTime openTime = LaserTagWaitlist.parseTime(openTimeString);
	LocalTime closeTime = LaserTagWaitlist.parseTime(closeTimeString);
	
	String timeSlotIncrementString = Integer.toString(Integer.parseInt(timeSlotIncrementInput.getValue().toString()));
	
	if (!openTimeString.equals(initSettings.get("open_time")) || !closeTimeString.equals(initSettings.get("open_time")) || !timeSlotIncrementString.equals(initSettings.get("time_slot_increment"))) {
	    if (JOptionPane.showConfirmDialog(this, "Are you sure you want to alter the time structure of the waitlist? The waitlist will be cleared and you will need to restart the application.", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
		dba.clearSchedule();
		
		dba.changeSetting("open_time", LaserTagWaitlist.formatTime(openTime));
		dba.changeSetting("close_time", LaserTagWaitlist.formatTime(closeTime));
		dba.changeSetting("time_slot_increment", timeSlotIncrementString);
		
		System.exit(0);
	    }
	}

	
		
	// Save - Local settings
	localSettings.save("Host", hostInput.getText().trim());
	localSettings.save("Port", portInput.getText().trim());
	localSettings.save("DBName", dbNameInput.getText().trim());
	localSettings.save("DBUsername", usernameInput.getText().trim());
	localSettings.save("DBPassword", passwordInput.getText().trim());
	this.dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JSpinner closeTimeHourInput;
    private javax.swing.JSpinner closeTimeMinuteInput;
    private javax.swing.JSpinner closeTimePeriodInput;
    private javax.swing.JTextField dbNameInput;
    private javax.swing.JSpinner gameCapacityInput;
    private javax.swing.JTextField hostInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner openTimeHourInput;
    private javax.swing.JSpinner openTimeMinuteInput;
    private javax.swing.JSpinner openTimePeriodInput;
    private javax.swing.JTextField passwordInput;
    private javax.swing.JTextField portInput;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField taxRateInput;
    private javax.swing.JSpinner timeSlotIncrementInput;
    private javax.swing.JTextField usernameInput;
    // End of variables declaration//GEN-END:variables
}
